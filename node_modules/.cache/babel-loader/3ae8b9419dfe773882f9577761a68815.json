{"ast":null,"code":"var _jsxFileName = \"/home/khanna/Desktop/Productive/SelfProjects/Portfolio/Portfolio (Main)/src/context.js\";\nimport React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\nconst ProductContext = React.createContext(); //provider- provide info\n//consumer - use the info instead of passing props from component to child component\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setproducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        console.log(\"reached here\");\n        this.removeItem(id);\n      } else if (product.count > 0) {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotals();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProduct = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id != id);\n      const index = tempProduct.indexOf(this.getItem(id));\n      let removedProduct = tempProduct[index];\n      removedProduct.inCart = false;\n      removedProduct.count = false;\n      removedProduct.total = false;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProduct]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setproducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => {\n        subTotal += item.total;\n      });\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setproducts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/khanna/Desktop/Productive/SelfProjects/Portfolio/Portfolio (Main)/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setproducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","increment","tempCart","selectedProduct","index","indexOf","count","total","price","addTotals","decrement","console","log","removeItem","tempProduct","filter","removedProduct","inCart","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","addToCart","openModal","closeModal","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\n\nconst ProductContext = React.createContext();\n//provider- provide info\n//consumer - use the info instead of passing props from component to child component\nclass ProductProvider extends Component {\n  state = {\n    products: [],\n    detailProduct: detailProduct,\n    cart: [],\n    modalOpen: false,\n    modalProduct: detailProduct,\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0\n  };\n  componentDidMount() {\n    this.setproducts();\n  }\n  setproducts = () => {\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = { ...item };\n      tempProducts = [...tempProducts, singleItem];\n    });\n    this.setState(() => {\n      return { products: tempProducts };\n    });\n  };\n\n  getItem = id => {\n    const product = this.state.products.find(item => item.id === id);\n    return product;\n  };\n  handleDetail = id => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return { detailProduct: product };\n    });\n  };\n  increment = id => {\n    let tempCart = [...this.state.cart];\n    const selectedProduct = tempCart.find(item => item.id === id);\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n    product.count = product.count + 1;\n    product.total = product.count * product.price;\n\n    this.setState(\n      () => {\n        return {\n          cart: [...tempCart]\n        };\n      },\n      () => {\n        this.addTotals();\n      }\n    );\n  };\n  decrement = id => {\n    let tempCart = [...this.state.cart];\n    const selectedProduct = tempCart.find(item => item.id === id);\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n    product.count = product.count - 1;\n\n    if(product.count ===0){\n      console.log(\"reached here\")\n      this.removeItem(id);\n    }\n    else if (product.count >0){\n    product.total = product.count * product.price;\n    \n    this.setState(\n      () => {\n        return {\n          cart: [...tempCart]\n        };\n      },\n      () => {\n        this.addTotals();\n      }\n    );\n    }\n  };\n  removeItem = id => {\n    let tempProduct = [...this.state.products];\n    let tempCart = [...this.state.cart];\n\n    tempCart = tempCart.filter(item => item.id != id);\n    const index = tempProduct.indexOf(this.getItem(id));\n    let removedProduct = tempProduct[index];\n    removedProduct.inCart = false;\n    removedProduct.count = false;\n    removedProduct.total = false;\n    this.setState(\n      () => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProduct]\n        };\n      },\n      () => {\n        this.addTotals();\n      }\n    );\n  };\n  clearCart = () => {\n    this.setState(\n      () => {\n        return { cart: [] };\n      },\n      () => {\n        this.setproducts();\n        this.addTotals();\n      }\n    );\n  };\n  addTotals = () => {\n    let subTotal = 0;\n    this.state.cart.map(item => {\n      subTotal += item.total;\n    });\n    const tempTax = subTotal * 0.1;\n    const tax = parseFloat(tempTax.toFixed(2));\n    const total = subTotal + tax;\n    this.setState(() => {\n      return {\n        cartSubTotal: subTotal,\n        cartTax: tax,\n        cartTotal: total\n      };\n    });\n  };\n  addToCart = id => {\n    let tempProducts = [...this.state.products];\n    const index = tempProducts.indexOf(this.getItem(id));\n    const product = tempProducts[index];\n    product.inCart = true;\n    product.count = 1;\n    const price = product.price;\n    product.total = price;\n    this.setState(\n      () => {\n        return { products: tempProducts, cart: [...this.state.cart, product] };\n      },\n      () => {\n        this.addTotals();\n      }\n    );\n  };\n  openModal = id => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return {\n        modalProduct: product,\n        modalOpen: true\n      };\n    });\n  };\n  closeModal = () => {\n    this.setState(() => {\n      return { modalOpen: false };\n    });\n  };\n  render() {\n    return (\n      <ProductContext.Provider\n        value={{\n          ...this.state,\n          handleDetail: this.handleDetail,\n          addToCart: this.addToCart,\n          openModal: this.openModal,\n          closeModal: this.closeModal,\n          increment: this.increment,\n          decrement: this.decrement,\n          removeItem: this.removeItem,\n          clearCart: this.clearCart\n        }}\n      >\n        {this.props.children}\n      </ProductContext.Provider>\n    );\n  }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };\n"]},"metadata":{},"sourceType":"module"}