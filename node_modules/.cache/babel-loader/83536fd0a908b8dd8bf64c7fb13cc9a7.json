{"ast":null,"code":"var _jsxFileName = \"/home/khanna/Desktop/Productive/SelfProjects/Portfolio/Portfolio (Main)/src/components/Contact/Form.js\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst Form = () => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  console.log(watch(\"example\")); // watch input value by passing the name of it\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: \"Required\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }), errors.email && errors.email.message, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"username\",\n    ref: register({\n      validate: value => value !== \"admin\" || \"Nice try!\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), errors.username && errors.username.message, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\nexport default Form;","map":{"version":3,"sources":["/home/khanna/Desktop/Productive/SelfProjects/Portfolio/Portfolio (Main)/src/components/Contact/Form.js"],"names":["React","useForm","Form","register","handleSubmit","watch","errors","onSubmit","data","console","log","required","pattern","value","message","email","validate","username"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAA4CL,OAAO,EAAzD;;AACA,QAAMM,QAAQ,GAAIC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAA3B;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAAC,SAAD,CAAjB,EAJiB,CAIc;;AAE/B,sBACE;AAAM,IAAA,QAAQ,EAAED,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,GAAG,EAAEJ,QAAQ,CAAC;AACZQ,MAAAA,QAAQ,EAAE,UADE;AAEZC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,0CADA;AAEPC,QAAAA,OAAO,EAAE;AAFF;AAFG,KAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWGR,MAAM,CAACS,KAAP,IAAgBT,MAAM,CAACS,KAAP,CAAaD,OAXhC,eAaE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,GAAG,EAAEX,QAAQ,CAAC;AACZa,MAAAA,QAAQ,EAAGH,KAAD,IAAWA,KAAK,KAAK,OAAV,IAAqB;AAD9B,KAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAmBGP,MAAM,CAACW,QAAP,IAAmBX,MAAM,CAACW,QAAP,CAAgBH,OAnBtC,eAoBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF,CADF;AAwBD,CA9BD;;AA+BA,eAAeZ,IAAf","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst Form = () => {\n  const { register, handleSubmit, watch, errors } = useForm();\n  const onSubmit = (data) => console.log(data);\n\n  console.log(watch(\"example\")); // watch input value by passing the name of it\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input\n        name=\"email\"\n        ref={register({\n          required: \"Required\",\n          pattern: {\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n            message: \"invalid email address\",\n          },\n        })}\n      />\n      {errors.email && errors.email.message}\n\n      <input\n        name=\"username\"\n        ref={register({\n          validate: (value) => value !== \"admin\" || \"Nice try!\",\n        })}\n      />\n      {errors.username && errors.username.message}\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}