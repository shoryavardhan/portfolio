{"ast":null,"code":"// Semi-SemiCircle shaped progress bar\nvar Shape = require('./shape');\n\nvar Circle = require('./circle');\n\nvar utils = require('./utils');\n\nvar SemiCircle = function SemiCircle(container, options) {\n  // Use one arc to form a SemiCircle\n  // See this answer http://stackoverflow.com/a/10477334/1446092\n  this._pathTemplate = 'M 50,50 m -{radius},0' + ' a {radius},{radius} 0 1 1 {2radius},0';\n  this.containerAspectRatio = 2;\n  Shape.apply(this, arguments);\n};\n\nSemiCircle.prototype = new Shape();\nSemiCircle.prototype.constructor = SemiCircle;\n\nSemiCircle.prototype._initializeSvg = function _initializeSvg(svg, opts) {\n  svg.setAttribute('viewBox', '0 0 100 50');\n};\n\nSemiCircle.prototype._initializeTextContainer = function _initializeTextContainer(opts, container, textContainer) {\n  if (opts.text.style) {\n    // Reset top style\n    textContainer.style.top = 'auto';\n    textContainer.style.bottom = '0';\n\n    if (opts.text.alignToBottom) {\n      utils.setStyle(textContainer, 'transform', 'translate(-50%, 0)');\n    } else {\n      utils.setStyle(textContainer, 'transform', 'translate(-50%, 50%)');\n    }\n  }\n}; // Share functionality with Circle, just have different path\n\n\nSemiCircle.prototype._pathString = Circle.prototype._pathString;\nSemiCircle.prototype._trailString = Circle.prototype._trailString;\nmodule.exports = SemiCircle;","map":{"version":3,"sources":["/home/khanna/Desktop/kpportfolio/node_modules/progressbar.js/src/semicircle.js"],"names":["Shape","require","Circle","utils","SemiCircle","container","options","_pathTemplate","containerAspectRatio","apply","arguments","prototype","constructor","_initializeSvg","svg","opts","setAttribute","_initializeTextContainer","textContainer","text","style","top","bottom","alignToBottom","setStyle","_pathString","_trailString","module","exports"],"mappings":"AAAA;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,SAAD,CAAnB;;AAEA,IAAIG,UAAU,GAAG,SAASA,UAAT,CAAoBC,SAApB,EAA+BC,OAA/B,EAAwC;AACrD;AACA;AACA,OAAKC,aAAL,GACI,0BACA,wCAFJ;AAIA,OAAKC,oBAAL,GAA4B,CAA5B;AAEAR,EAAAA,KAAK,CAACS,KAAN,CAAY,IAAZ,EAAkBC,SAAlB;AACH,CAVD;;AAYAN,UAAU,CAACO,SAAX,GAAuB,IAAIX,KAAJ,EAAvB;AACAI,UAAU,CAACO,SAAX,CAAqBC,WAArB,GAAmCR,UAAnC;;AAEAA,UAAU,CAACO,SAAX,CAAqBE,cAArB,GAAsC,SAASA,cAAT,CAAwBC,GAAxB,EAA6BC,IAA7B,EAAmC;AACrED,EAAAA,GAAG,CAACE,YAAJ,CAAiB,SAAjB,EAA4B,YAA5B;AACH,CAFD;;AAIAZ,UAAU,CAACO,SAAX,CAAqBM,wBAArB,GAAgD,SAASA,wBAAT,CAC5CF,IAD4C,EAE5CV,SAF4C,EAG5Ca,aAH4C,EAI9C;AACE,MAAIH,IAAI,CAACI,IAAL,CAAUC,KAAd,EAAqB;AACjB;AACAF,IAAAA,aAAa,CAACE,KAAd,CAAoBC,GAApB,GAA0B,MAA1B;AACAH,IAAAA,aAAa,CAACE,KAAd,CAAoBE,MAApB,GAA6B,GAA7B;;AAEA,QAAIP,IAAI,CAACI,IAAL,CAAUI,aAAd,EAA6B;AACzBpB,MAAAA,KAAK,CAACqB,QAAN,CAAeN,aAAf,EAA8B,WAA9B,EAA2C,oBAA3C;AACH,KAFD,MAEO;AACHf,MAAAA,KAAK,CAACqB,QAAN,CAAeN,aAAf,EAA8B,WAA9B,EAA2C,sBAA3C;AACH;AACJ;AACJ,CAhBD,C,CAkBA;;;AACAd,UAAU,CAACO,SAAX,CAAqBc,WAArB,GAAmCvB,MAAM,CAACS,SAAP,CAAiBc,WAApD;AACArB,UAAU,CAACO,SAAX,CAAqBe,YAArB,GAAoCxB,MAAM,CAACS,SAAP,CAAiBe,YAArD;AAEAC,MAAM,CAACC,OAAP,GAAiBxB,UAAjB","sourcesContent":["// Semi-SemiCircle shaped progress bar\n\nvar Shape = require('./shape');\nvar Circle = require('./circle');\nvar utils = require('./utils');\n\nvar SemiCircle = function SemiCircle(container, options) {\n    // Use one arc to form a SemiCircle\n    // See this answer http://stackoverflow.com/a/10477334/1446092\n    this._pathTemplate =\n        'M 50,50 m -{radius},0' +\n        ' a {radius},{radius} 0 1 1 {2radius},0';\n\n    this.containerAspectRatio = 2;\n\n    Shape.apply(this, arguments);\n};\n\nSemiCircle.prototype = new Shape();\nSemiCircle.prototype.constructor = SemiCircle;\n\nSemiCircle.prototype._initializeSvg = function _initializeSvg(svg, opts) {\n    svg.setAttribute('viewBox', '0 0 100 50');\n};\n\nSemiCircle.prototype._initializeTextContainer = function _initializeTextContainer(\n    opts,\n    container,\n    textContainer\n) {\n    if (opts.text.style) {\n        // Reset top style\n        textContainer.style.top = 'auto';\n        textContainer.style.bottom = '0';\n\n        if (opts.text.alignToBottom) {\n            utils.setStyle(textContainer, 'transform', 'translate(-50%, 0)');\n        } else {\n            utils.setStyle(textContainer, 'transform', 'translate(-50%, 50%)');\n        }\n    }\n};\n\n// Share functionality with Circle, just have different path\nSemiCircle.prototype._pathString = Circle.prototype._pathString;\nSemiCircle.prototype._trailString = Circle.prototype._trailString;\n\nmodule.exports = SemiCircle;\n"]},"metadata":{},"sourceType":"script"}