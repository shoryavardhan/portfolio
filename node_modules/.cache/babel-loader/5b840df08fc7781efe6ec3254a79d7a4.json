{"ast":null,"code":"var _jsxFileName = \"/home/khanna/Desktop/Productive/SelfProjects/Portfolio/Portfolio (Main)/src/components/Contact/Form.js\";\nimport React from \"react\"; // import { useForm } from \"react-hook-form\";\n\nimport ReactDOM from \"react-dom\";\nimport { StyledButton } from \"/home/khanna/Desktop/Productive/SelfProjects/Portfolio/Portfolio (Main)/src/components/Button/Button.styled.js\";\nimport { StyledForm } from \"./Form.styled\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      mobile: \"\",\n      company: \"\",\n      email: \"\",\n      message: \"\",\n      error: \"\",\n      thankyou: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n  }\n\n  isValidEmail(email) {\n    return /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email);\n  }\n\n  isValidMobile(mobileno) {\n    return /^[6-9]\\d{9}$/.test(mobileno);\n  }\n\n  validateField(field, value) {\n    if (value.length <= 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-capitalize\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, field), \" is required field.\");\n    } else {\n      if (field == \"email\") {\n        if (!this.isValidEmail(value)) return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 18\n          }\n        }, \"Invalid Email.\");\n      } else if (field == \"mobile\") {\n        if (!this.isValidMobile(value)) return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }\n        }, \"Invalid Mobile Number.\");\n      } else {\n        return \"\";\n      }\n    }\n  }\n\n  handleBlur(event) {\n    this.setState({\n      error: this.validateField(event.target.name, event.target.value)\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    this.setState({\n      thankyou: true\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    if (!this.state.thankyou) {\n      return /*#__PURE__*/React.createElement(StyledForm, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, this.props.title), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, this.state.error, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        encType: \"multipart/form-data\",\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ele\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        className: \" eleS\",\n        placeholder: \"Name *\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur,\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \" ele\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        className: \"eleS\",\n        placeholder: \"Email *\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur,\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \" ele text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        name: \"message\",\n        type: \"text\",\n        className: \"eleS eleText\",\n        placeholder: \"How can I help ? * \",\n        value: this.state.message,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur,\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-center contact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(StyledButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"button\",\n        value: \"Submit Now\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      })))))));\n    }\n\n    if (this.state.thankyou) {\n      return /*#__PURE__*/React.createElement(StyledForm, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"thankyou\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, \"Thank for your message, \", this.state.name.split(\" \", 1), \". I will contact you soon.\")));\n    }\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Form, {\n  title: \"Get In Touch\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));\nexport default Form;","map":{"version":3,"sources":["/home/khanna/Desktop/Productive/SelfProjects/Portfolio/Portfolio (Main)/src/components/Contact/Form.js"],"names":["React","ReactDOM","StyledButton","StyledForm","Form","Component","constructor","props","state","name","mobile","company","email","message","error","thankyou","handleChange","bind","handleSubmit","handleBlur","isValidEmail","test","isValidMobile","mobileno","validateField","field","value","length","event","setState","target","preventDefault","render","title","split","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import { useForm } from \"react-hook-form\";\nimport ReactDOM from \"react-dom\";\nimport { StyledButton } from \"/home/khanna/Desktop/Productive/SelfProjects/Portfolio/Portfolio (Main)/src/components/Button/Button.styled.js\";\nimport { StyledForm } from \"./Form.styled\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      mobile: \"\",\n      company: \"\",\n      email: \"\",\n      message: \"\",\n      error: \"\",\n      thankyou: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n  }\n\n  isValidEmail(email) {\n    return /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email);\n  }\n\n  isValidMobile(mobileno) {\n    return /^[6-9]\\d{9}$/.test(mobileno);\n  }\n\n  validateField(field, value) {\n    if (value.length <= 0) {\n      return (\n        <div className=\"alert alert-danger\">\n          <span className=\"text-capitalize\">{field}</span> is required field.\n        </div>\n      );\n    } else {\n      if (field == \"email\") {\n        if (!this.isValidEmail(value))\n          return <div className=\"alert alert-danger\">Invalid Email.</div>;\n      } else if (field == \"mobile\") {\n        if (!this.isValidMobile(value))\n          return (\n            <div className=\"alert alert-danger\">Invalid Mobile Number.</div>\n          );\n      } else {\n        return \"\";\n      }\n    }\n  }\n\n  handleBlur(event) {\n    this.setState({\n      error: this.validateField(event.target.name, event.target.value),\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  handleSubmit(event) {\n    this.setState({\n      thankyou: true,\n    });\n\n    event.preventDefault();\n  }\n\n  render() {\n    if (!this.state.thankyou) {\n      return (\n        <StyledForm>\n          <div className=\"container\">\n            <div className=\"text-center\">{this.props.title}</div>\n            <div className=\"card-body\">\n              {this.state.error}\n\n              <form\n                onSubmit={this.handleSubmit}\n                encType=\"multipart/form-data\"\n                autoComplete=\"off\"\n              >\n                <div className=\"ele\">\n                  <input\n                    name=\"name\"\n                    type=\"text\"\n                    className=\" eleS\"\n                    placeholder=\"Name *\"\n                    value={this.state.name}\n                    onChange={this.handleChange}\n                    onBlur={this.handleBlur}\n                    required=\"required\"\n                  />\n                </div>\n                <div className=\" ele\">\n                  <input\n                    name=\"email\"\n                    type=\"email\"\n                    className=\"eleS\"\n                    placeholder=\"Email *\"\n                    value={this.state.email}\n                    onChange={this.handleChange}\n                    onBlur={this.handleBlur}\n                    required=\"required\"\n                  />\n                </div>\n                <div className=\" ele text\">\n                  <textarea\n                    name=\"message\"\n                    type=\"text\"\n                    className=\"eleS eleText\"\n                    placeholder=\"How can I help ? * \"\n                    value={this.state.message}\n                    onChange={this.handleChange}\n                    onBlur={this.handleBlur}\n                    required=\"required\"\n                  />\n                </div>\n                <p className=\"text-center contact\">\n                  <StyledButton>\n                    <input\n                      type=\"submit\"\n                      className=\"button\"\n                      value=\"Submit Now\"\n                    />\n                  </StyledButton>\n                </p>\n              </form>\n            </div>\n          </div>\n        </StyledForm>\n      );\n    }\n\n    if (this.state.thankyou) {\n      return (\n        <StyledForm>\n          <div>\n            <p className=\"thankyou\">\n              \n              Thank for your message, {this.state.name.split(\" \", 1)}. I will\n              contact you soon.\n            </p>\n          </div>\n        </StyledForm>\n      );\n    }\n  }\n}\n\nReactDOM.render(<Form title=\"Get In Touch\" />, document.getElementById(\"root\"));\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}